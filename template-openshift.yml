apiVersion: v1
kind: Template
labels:
  template: "sxapi-demo-example" 
metadata:
  creationTimestamp: null
  name: "sxapi-demo-example"
  annotations:
    openshift.io/display-name: "SXAPI demo example (Ephemeral)" 
    description: >-
      An example SXAPI application with a simple home page. For more information
      about using this template, including OpenShift considerations, see
      https://github.com/startxfr/sxapi-core/blob/testing/README.md.

      WARNING: Any data stored will be lost upon pod destruction. Only use this
      template for testing." 
    template.openshift.io/long-description: >-
      This template defines resources needed to develop a SXAPI application,
      you only have to access the config Map and configure your api
      https://github.com/startxfr/sxapi-core/blob/testing/Openshift.md. 
    tags: "quickstart,nodejs,sxapi" 
    iconClass: icon-nodejs 
    template.openshift.io/provider-display-name: "STARTX" 
    template.openshift.io/documentation-url: "https://github.com/startxfr/sxapi-core" 
    template.openshift.io/support-url: "https://github.com/startxfr/sxapi-core/issues/new" 
message: "you can now change your config Map to configure your api" 
parameters:
  - name: APP_NAME
    description: "your application name"
    value: demo
  - name: SXAPI_VERSION
    description: "sxapi version to use"
    value: latest
objects:
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-config"
    annotations:
      openshift.io/generated-by: STARTX
  data:
    sxapi.json: |
      {
        "name": "sxapi-dev-default",
        "description": "sxapi default config file",
        "version": "dev",
        "debug": true,
        "session": {
            "duration": 3600,
            "auto_create": true,
            "transport": {
                "type": "cookie",
                "cookie_name": "sxapi-sess"
            },
            "backend": {
                "type": "memory",
                "sid_field": "token_sess",
                "fields": {
                    "stop": "datefin_sess"
                }
            }
        },
        "resources": {
        },
        "log": {
            "filters": {
                "level": "0,1,2,3,4",
                "type": "debug,info,error,warn"
            }
        },
        "server": {
            "type": "express",
            "port": "8080",
            "bodyParserJson": true,
            "bodyParserUrl": true,
            "endpoints": [
                {
                    "path": "/",
                    "body": "<html><head></head><body><h1>SXAPI sample is working !</h1></body></html>"
                },
                {
                    "path": "/ping",
                    "code": "200",
                    "header": {
                        "Content-Type": "application/json"
                    },
                    "body": "{\"health\":\"good\"}"
                }
            ]
        }
      }
- kind: ImageStream
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/display-name: "SXAPI"
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    tags:
    - annotations:
        openshift.io/display-name: "SXAPI (${SXAPI_VERSION})"
        openshift.io/generated-by: STARTX
        description: "Build and run Node.js SXAPI application sample. For more information about using this builder image, including OpenShift considerations, see https://github.com/startxfr/sxapi-core/blob/testing/README.md"
        iconClass: "icon-nodejs"
        tags: "builder,nodejs,sxapi"
        supports: "sxapi"
        sampleRepo: "https://github.com/startxfr/sxapi-sample.git"
      from:
        kind: DockerImage
        name: "startx/sxapi:${SXAPI_VERSION}"
      name: "${SXAPI_VERSION}"
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    replicas: 1
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    strategy:
      activeDeadlineSeconds: 60
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 0%
        timeoutSeconds: 10
        updatePeriodSeconds: 2
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: STARTX
        labels:
          app: "${APP_NAME}"
          deploymentconfig: "${APP_NAME}"
      spec:
        containers:
        - image: startx/sxapi@sha256:78fc008ef281f16eaa244e2df0df6b89e91fa24a56124202e7938ffd366b3923
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          name: "${APP_NAME}"
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: "${APP_NAME}-config"
            readOnly: true
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        volumes:
        - name: "${APP_NAME}-config"
          secret:
            defaultMode: 420
            secretName: "${APP_NAME}-config"
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APP_NAME}"
        from:
          kind: ImageStreamTag
          name: "${APP_NAME}:${SXAPI_VERSION}"
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- kind: Route
  apiVersion: v1
  metadata:
    creationTimestamp: null
    name: "${APP_NAME}"
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: "${APP_NAME}"
      weight: 100
    wildcardPolicy: None
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/generated-by: STARTX
      template.openshift.io/expose-service_ip_port: "{.spec.clusterIP}:{.spec.ports[?(.name==\"web\")].port}"
    creationTimestamp: null
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: "${APP_NAME}"
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
