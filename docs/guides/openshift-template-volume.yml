apiVersion: v1
kind: Template
metadata:
  name: sxapi-volume-template
  annotations:
    description: Template for creating an SXAPI microservice with configuration stored in a volume object
    iconClass: icon-nodejs
    tags: sxapi,api,nodejs,startx,microservice
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  spec:
    clusterIP: None
    ports:
    - name: app
      port: 8080
    selector:
      name: "${APPLICATION_NAME}"
      type: application
- kind: StatefulSet
  apiVersion: apps/v1beta1
  metadata:
    name: "${APPLICATION_NAME}"
  spec:
    serviceName: "${APPLICATION_NAME}"
    replicas: "${REPLICAS_DATA}"
    template:
      metadata:
        labels:
          name: "${APPLICATION_NAME}"
          app: sxapi
          type: application
        annotations:
          pod.alpha.kubernetes.io/initialized: 'true'
          scheduler.alpha.kubernetes.io/affinity: "{}"
      spec:
        terminationGracePeriodSeconds: 86400
        containers:
        - name: sxapi-default
          image: "${REGISTRY}:${IMAGE_NAME}"
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 20
            tcpSocket:
              port: 8080
            timeoutSeconds: 2
          lifecycle:
            preStop:
              exec:
                command:
                - "npm"
                - stop
          ports:
          - containerPort: 8080
            name: app
          resources:
            requests:
              memory: "${MEMORY_LIMIT}"
              cpu: 0.1
            limits:
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - mountPath: "/conf"
            name: conf
    volumeClaimTemplates:
    - metadata:
        name: conf
        annotations:
          volume.beta.kubernetes.io/storage-class: "${STORAGE_CLASS_DATA}"
      spec:
        accessModes:
        - ReadOnly
        resources:
          requests:
            storage: "${VOLUME_CAPACITY_DATA}"
parameters:
- name: APPLICATION_NAME
  displayName: Application Name
  description: The name of the application.
  value: sxapi-demo
  required: true
- name: IMAGE_NAME
  value: 0.1.3
  required: true
- name: REGISTRY
  value: "startx/sxapi"
  required: true
- name: REPLICAS_DATA
  displayName: Desired Pod count for data nodes
  description: How many data nodes should be provisioned? This value can be changed
    later, by scaling up/down.
  value: '2'
  required: true
- name: MEMORY_LIMIT
  displayName: Memory Limit for data nodes
  description: Maximum amount of memory data container can use.
  value: 128Mi
- name: VOLUME_CAPACITY_DATA
  displayName: Volume Capacity for data nodes
  description: Volume space available for data nodes, e.g. 512Mi, 2Gi.
  value: 10Mi
  required: true
- name: STORAGE_CLASS_DATA
  displayName: Storage Class for data nodes
  description: Storage Class of the volume space for data nodes, e.g. fast, slow
  value: slow
  required: true
labels:
  template: sxapi-volume-template